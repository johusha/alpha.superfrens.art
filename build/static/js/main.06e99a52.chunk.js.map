{"version":3,"sources":["img/logo_back_splash.png","img/talk_to_us_on_discord_first_door.png","img/talk_to_us_on_discord_mint_page.png","components/Clickable.js","components/LightThing.js","components/Door.js","components/Wall.js","components/MintWall.js","lib/Web3Helpers.js","components/classes/WalletConnect.js","components/Modal.js","img/warning_notice_info_level_2.png","components/InfoWall.js","components/ImageLink.js","components/LogoBackSplash.js","App.js","useWeb3.js","reportWebVitals.js","index.js"],"names":["Clickable","position","className","onClick","debug","children","top","left","width","height","debugStyle","background","opacity","doorState","useContext","AppContext","style","DOOR_STATES","unlocked","open","console","log","LightThing","src","lightClassName","Object","keys","find","key","zIndex","pointerEvents","DoorThing","handleClick","Door","Web3Context","web3","walletAddress","setDoorState","setFloorState","floorState","useEffect","no_power","locked","audio","Audio","loop","play","Wall","MintWall","handleChainChanged","chainId","chainIdToName","alert","sleep","ms","Promise","resolve","setTimeout","WalletConnect","web3Context","loading","handleConnect","handleDisconnect","balance","useState","isLoading","setIsLoading","Modal","Content","clickableProps","wrapperProps","contentProps","closeButtonProps","isOpen","setIsOpen","display","InfoWall","warning_notice","ImageLink","imgId","imgSrc","href","target","id","LogoBackSplash","props","disabled","srcImg","createContext","undefined","displayName","App","Web3ContextData","setWeb3","setLoading","signedIn","setSignedIn","setWalletAddress","frensKeysInstance","setFrensKeysInstance","swapperInstance","setSwapperInstance","how_many_nfts","totalSupply","setTotalSupply","totalMinted","setTotalMinted","setBalance","a","expectedBlockTime","methods","swapOwner","options","address","approve","send","from","error","transactonHash","transactionReceipt","eth","getTransactionReceipt","swap","final_balance","balanceOf","call","balanceResp","ethereum","getChainId","getAccounts","then","acc","handleAccountsChanged","catch","message","accounts","length","wallet","callContractData","FrenKeysContract","Contract","FrenKeysABI","SwapperContract","SwapperABI","maxSupply","owner","providerOptions","web3Modal","Web3Modal","network","cacheProvider","connect","provider","Web3","on","window","location","reload","info","addEventListener","once","getBalance","useWeb3","history","scrollRestoration","scrollTo","mintButtonClickHandler","swapResponse","document","querySelectorAll","scrollIntoView","behavior","Provider","value","logo_back_splash","talk_to_us_on_discord_first_door","talk_to_us_on_discord_mint_page","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","vitals"],"mappings":"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","file":"static/js/main.06e99a52.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_back_splash.7881d941.png\";","export default __webpack_public_path__ + \"static/media/talk_to_us_on_discord_first_door.5bab4e8a.png\";","export default __webpack_public_path__ + \"static/media/talk_to_us_on_discord_mint_page.670954f6.png\";","import \"./Clickable.css\";\nimport { useContext } from \"react\";\nimport { AppContext, DOOR_STATES } from \"../App\";\n\nfunction Clickable({ position, className, onClick, debug = false, children }) {\n  const { top, left, width, height } = position;\n\n  const debugStyle = debug ? { background: \"red\", opacity: 0.6 } : {};\n\n  const { doorState } = useContext(AppContext);\n\n  const clickHandler = () => {\n    if (doorState !== DOOR_STATES.unlocked && doorState !== DOOR_STATES.open) {\n      return console.log(\"nah not doin it. The door is not unlocked\");\n    }\n    if (onClick) onClick();\n  };\n\n  return (\n    <div\n      className={`Clickable ${className}`}\n      style={{\n        top,\n        left,\n        width,\n        height,\n        ...debugStyle,\n      }}\n      onClick={clickHandler}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Clickable;\n","import './LightThing.css'\nimport { useContext } from 'react';\nimport { AppContext, DOOR_STATES } from '../App';\n\nfunction LightThing({src}) {\n\n  const { doorState } = useContext(AppContext)\n\n  const lightClassName = Object.keys(DOOR_STATES).find(\n    // returns DOOR_STATES key name @ value of doorState\n    // one of no_power, locked, unlocked, open\n    (key) => DOOR_STATES[key] === doorState\n  );\n\n  return (\n    <div className=\"StageLayer LightThing\" style={{zIndex: '6', pointerEvents: 'none'}}>\n      <img\n        className={`${lightClassName}`}\n        src={src}\n      />\n    </div>\n  )\n}\n\nexport default LightThing\n","import './Door.css'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { Web3Context, AppContext, DOOR_STATES } from '../App'\n\nimport Clickable from './Clickable'\nimport LightThing from './LightThing'\n\nfunction Door() {\n  const { web3, walletAddress } = useContext(Web3Context)\n  // const [doorState, setDoorState] = useState(DOOR_STATES.no_power);\n  const { doorState, setDoorState, floorState, setFloorState } = useContext(AppContext)\n\n  function handleClick() {\n    console.log('click')\n    // can add a loading state to block clicking door again during load.\n\n    if (doorState >= DOOR_STATES.unlocked) {\n      if (doorState === DOOR_STATES.unlocked) {\n        setDoorState(DOOR_STATES.open)\n        var audio = new Audio('sound/Dark_Space_Noise_02.mp3')\n        audio.loop = true\n        audio.play()\n      }\n      if (doorState === DOOR_STATES.open) {\n        // setDoorState(DOOR_STATES.unlocked);\n        setFloorState(1)\n      }\n    }\n  }\n\n  useEffect(() => {\n    console.log({ doorState })\n    // no web3 provider connected.\n    if (!web3) {\n      setDoorState(DOOR_STATES.no_power)\n      setFloorState(0)\n      // Web3 provider connected. No address.\n    } else {\n      // var audio = new Audio(\"sound/Dark_Space_Noise_02.mp3\");\n      // audio.loop = true;\n      // audio.play();\n    }\n    if (!walletAddress) {\n      setDoorState(DOOR_STATES.locked)\n    } else {\n      // 📃TODO: Actually verify the user has a key\n      setDoorState(DOOR_STATES.unlocked)\n    }\n  }, [web3, walletAddress])\n\n  // const lightClassName = Object.keys(DOOR_STATES).find(\n  //   // returns DOOR_STATES key name @ value of doorState\n  //   // one of no_power, locked, unlocked, open\n  //   (key) => DOOR_STATES[key] === doorState\n  // );\n\n  const lightParams = {}\n\n  return (\n    <>\n      <LightThing position={lightParams} />\n      <DoorThing handleClick={handleClick} doorState={doorState} />\n    </>\n  )\n\n  // return (\n  //   <div className=\"Stage\">\n  //     <div className=\"StageStatic\">\n  //       <img src=\"image/web/door1_left.png\" />\n  //       <img src=\"image/web/door_ALPHA.png\" />\n  //       <img src=\"image/web/door1_right.png\" />\n  //     </div>\n  //     <DoorThing doorState={doorState} handleClick={handleClick} />\n\n  //     <div className=\"StageLight\">\n  //       <img\n  //         className={`${lightClassName}`}\n  //         src=\"image/web/Landing_screen1_light.png\"\n  //       />\n  //     </div>\n  //   </div>\n  // );\n}\n\nfunction DoorThing({ doorState, handleClick }) {\n  return (\n    <>\n      <Clickable\n        onClick={handleClick}\n        position={{\n          top: '32%',\n          left: '42%',\n          width: '16%',\n          height: '43%',\n        }}\n      />\n      <LightThing src=\"image/web/Landing_screen1_light.png\" />\n      <div className={`StageLayer Door`}>\n        <img src={`image/web/door0.png`} className={`door ${DOOR_STATES.open === doorState && 'doorOpen'}`} />\n      </div>\n    </>\n  )\n}\n\nexport default Door\n","import './Wall.css'\n\nfunction Wall() {\n  return (\n    <div className=\"StageLayer Wall\"></div>\n  )\n}\n\nexport default Wall","import './MintWall.css'\n\nimport Clickable from './Clickable'\nimport LightThing from './LightThing'\n\n\nfunction MintWall({onClick}) {\n  \n\n  return (\n    <>\n      <Clickable onClick={onClick}\n        position={{\n          top: '48%',\n          left: '59%',\n          width: '8%',\n          height: '8%'\n        }} />\n      <LightThing src=\"image/web/mint_light.png\" />\n      <div className=\"StageLayer MintWall\"></div>\n    </>\n  )\n}\n\nexport default MintWall","export function handleChainChanged(chainId) {\n  // 📝 TODO: Make this show a 'Switch Network' button in place of connect\n  if (chainIdToName(chainId) !== \"Mainnet\" && chainIdToName(chainId) !== \"Rinkeby\") {\n    alert(\n      \"You are on \" +\n      chainIdToName(chainId) +\n      \" network. Change network to mainnet or you won't be able to do anything here\"\n    );\n    return false;\n  }\n  return true;\n}\nexport const chainIdToName = (chainId) => {\n  // 0x1\t1\tEthereum Main Network (Mainnet)\n  // 0x3\t3\tRopsten Test Network\n  // 0x4\t4\tRinkeby Test Network\n  // 0x5\t5\tGoerli Test Network\n  // 0x2a\t42\tKovan Test Network\n  switch (chainId) {\n    case 1:\n      return \"Mainnet\";\n    case \"0x3\":\n      return \"Ropsten\";\n    case 4:\n      return \"Rinkeby\";\n    case \"0x5\":\n      return \"Goerli\";\n    case \"0x2a\":\n      return \"Kovan\";\n    default:\n      return false;\n  }\n};\n\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import './WalletConnect.css'\nimport '../../animate.css'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { Web3Context } from '../../App'\n\nexport function WalletConnect() {\n  const web3Context = useContext(Web3Context)\n\n  const { web3, loading, handleConnect, handleDisconnect, walletAddress, balance } = web3Context\n\n  const [isLoading, setIsLoading] = useState(true)\n  const [numOfKeys, setNumOfKeys] = useState(0)\n  useEffect(() => {\n    // to aid in a transition from loading to not loading,\n    if (loading === false) {\n      setTimeout(() => {\n        setIsLoading(false)\n      }, 1000)\n    }\n\n    // set timeout to 0 to remove\n  }, [loading])\n\n  return (\n    <div className={'wallet-connect'}>\n      {isLoading === true ? (\n        <div className={'loading'} />\n      ) : walletAddress ? (\n        <div className={'fade-in-out-partial address-wrapper'} onClick={handleDisconnect}>\n          Connected Address <div className={'address'}>{walletAddress}</div>\n          {balance} keys\n        </div>\n      ) : (\n        <button className={'button'} onClick={handleConnect}>\n          Connect\n        </button>\n      )}\n    </div>\n  )\n}\n","import { useState } from \"react\";\nimport \"./Modal.scss\";\n\nimport React from \"react\";\nimport Clickable from \"./Clickable\";\nexport function Modal({\n  Content, // modal content\n  clickableProps, // pass-through props for clickable component\n  wrapperProps, // props for .modal-content\n  contentProps, // props for .modal-content\n  closeButtonProps, // props for .close\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <Clickable onClick={() => setIsOpen(true)} {...clickableProps} />\n      <div\n        style={{ display: isOpen ? \"block\" : \"none\" }}\n        className=\"modal-wrapper\"\n        onClick={() => setIsOpen(false)}\n        {...wrapperProps}\n      >\n        <div className=\"modal-content\" {...contentProps}>\n          <span className=\"modal-close\" {...closeButtonProps} >\n            &times;\n          </span>\n          {Content}\n        </div>\n      </div>\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/warning_notice_info_level_2.29b61c1e.png\";","import \"./InfoWall.css\";\nimport { AppContext } from \"../App\";\nimport React, { useContext } from \"react\";\n\nimport Clickable from \"./Clickable\";\nimport LightThing from \"./LightThing\";\nimport { Modal } from \"./Modal\";\nimport warning_notice from \"../img/warning_notice_info_level_2.png\";\n\nfunction InfoWall() {\n  const { floorState, setFloorState } = useContext(AppContext);\n\n  const clickHandler = () => {\n    setFloorState(2);\n  };\n\n  return (\n    <>\n      <Modal\n        Content={<img width={\"100%\"} src={warning_notice} />}\n        clickableProps={{\n          className: \"info-wall-pop-up\",\n          position: {\n            top: \"25%\",\n            left: \"30%\",\n            width: \"25%\",\n            height: \"37%\",\n          },\n        }}\n      />\n\n      <Clickable\n        onClick={clickHandler}\n        position={{\n          top: \"55%\",\n          left: \"72%\",\n          width: \"9%\",\n          height: \"8%\",\n        }}\n      />\n      <LightThing src=\"image/web/info_level_light.png\" />\n      <div className=\"StageLayer InfoWall\"></div>\n    </>\n  );\n}\n\nexport default InfoWall;\n","import Clickable from './Clickable'\nimport './ImageLink.scss'\nimport React from 'react'\n\nexport function ImageLink({ position, imgId, imgSrc, href }) {\n  return (\n    <a href={href} target=\"_blank\">\n      <Clickable className={'ImageLink'} position={position}>\n        <img id={imgId} src={imgSrc} />\n      </Clickable>{' '}\n    </a>\n  )\n}\n","import React, { useEffect, useState } from 'react'\n\nimport './LogoBackSplash.scss'\nfunction LogoBackSplash(props) {\n\n\n  return props.disabled ? (\n    <></>\n  ) : (\n    <img id={'logo_back_splash'} src={props.srcImg} className={props.loading ? '' : 'finished-loading'} />\n  )\n}\n\nexport default LogoBackSplash\n","import './App.scss'\nimport React, { createContext, useEffect, useState } from 'react'\nimport logo_back_splash from './img/logo_back_splash.png'\nimport talk_to_us_on_discord_first_door from './img/talk_to_us_on_discord_first_door.png'\nimport talk_to_us_on_discord_mint_page from './img/talk_to_us_on_discord_mint_page.png'\nimport Door from './components/Door'\nimport Wall from './components/Wall'\nimport MintWall from './components/MintWall'\n\nimport { useWeb3 } from './useWeb3'\nimport { WalletConnect } from './components/classes/WalletConnect'\nimport InfoWall from './components/InfoWall'\nimport { ImageLink } from './components/ImageLink'\nimport LogoBackSplash from './components/LogoBackSplash'\n\nexport const DOOR_STATES = {\n  no_power: 0,\n  locked: 1,\n  unlocked: 2,\n  open: 3,\n}\n\nexport const AppContext = createContext({\n  doorState: undefined,\n  setDoorState: undefined,\n  floorState: undefined,\n})\n\nexport const Web3Context = createContext({\n  web3: undefined,\n  loading: undefined,\n  walletAddress: null,\n  handleConnect: undefined,\n  handleDisconnect: undefined,\n})\n// adds debugger name\nWeb3Context.displayName = 'Web3Context'\n\nfunction App() {\n  const Web3ContextData = useWeb3()\n  // Navigation state\n  const [floorState, setFloorState] = useState(-1)\n\n  // Door state\n  const [doorState, setDoorState] = useState(DOOR_STATES.no_power)\n\n  // Make sure the screen is scrolled to the top at start\n  useEffect(() => {\n    if ('scrollRestoration' in window.history) {\n      window.history.scrollRestoration = 'manual'\n    }\n    window.scrollTo(0, 0)\n  }, ['👆'])\n\n  const mintButtonClickHandler = async () => {\n    console.log('mint button clicked!')\n\n    let swapResponse = await Web3ContextData.swap()\n\n    console.log(swapResponse)\n  }\n\n  useEffect(() => {\n    console.log({ floorState })\n    //Todo: change to scroll to next floor, remove query selectors... could use array of refs, scroll to idx + 1\n    if (floorState === 1) {\n      const floor = document.querySelectorAll('.Floor')[0]\n      floor.scrollIntoView({\n        behavior: 'smooth',\n      })\n    } else if (floorState === 2) {\n      const floor2 = document.querySelectorAll('.Floor')[1]\n      floor2.scrollIntoView({\n        behavior: 'smooth',\n      })\n    } else if (floorState === 3) {\n    }\n    // trigger when floorState changes\n  }, [floorState])\n\n  return (\n    <Web3Context.Provider value={Web3ContextData}>\n      <WalletConnect />\n      <AppContext.Provider value={{ doorState, setDoorState, floorState, setFloorState }}>\n        <div className=\"App\">\n          <div className=\"StageContainer overlay\">\n            <LogoBackSplash srcImg={logo_back_splash} disabled={false} loading={Web3ContextData.loading} />\n          </div>\n          <div className={`${floorState < 0 ? 'isHidden' : ''} `}>\n            <div className=\"FloorTop\" />\n\n            <div className=\"StageContainer\">\n              <div className=\"LeftStageThing\" />\n\n              <div className=\"CenterStageThing\">\n                <Door />\n                {/* <Light /> */}\n                <Wall />\n                <ImageLink\n                  id={'talk_to_us_on_discord_landing'}\n                  imgSrc={talk_to_us_on_discord_first_door}\n                  href={'https://discord.gg/AKqu8Wd3xb'}\n                  position={{\n                    top: '75%',\n                    left: '68%',\n                    width: '30%',\n                    height: '8%',\n                  }}\n                />\n              </div>\n\n              <div className=\"RightStageThing\" />\n            </div>\n\n            <div className=\"Floor\" />\n          </div>\n          <div className={`${floorState < 1 ? 'isHidden' : ''}`}>\n            <div className=\"StageContainer\">\n              <div className=\"CenterStageThing\">\n                {/* <InfoLight /> */}\n                <InfoWall />\n              </div>\n            </div>\n\n            <div className=\"Floor\" />\n          </div>\n          <div className={`${floorState < 2 ? 'isHidden' : ''}`}>\n            <div className=\"StageContainer\">\n              <div className=\"CenterStageThing\">\n                {/* <MintLight /> */}\n                <MintWall onClick={mintButtonClickHandler} />\n                <ImageLink\n                  id={'talk_to_us_on_discord_minting'}\n                  imgSrc={talk_to_us_on_discord_mint_page}\n                  href={'https://discord.gg/AKqu8Wd3xb'}\n                  position={{\n                    top: '75%',\n                    left: '15%',\n                    width: '27%',\n                    height: '8%',\n                  }}\n                />\n              </div>\n            </div>\n            <div className=\"FloorBottom\" />\n          </div>\n          <div className=\"Content\" style={{ display: 'none' }} />\n        </div>\n      </AppContext.Provider>\n    </Web3Context.Provider>\n  )\n}\n\nexport default App\n","import Web3 from 'web3'\nimport Web3Modal from 'web3modal'\nimport { useEffect, useState } from 'react'\nimport {handleChainChanged, sleep} from './lib/Web3Helpers'\n\nimport FrenKeysABI from './components/ABI/FrenKeys.json'\nimport SwapperABI from './components/ABI/Swapper.json'\nexport function useWeb3() {\n  const [web3, setWeb3] = useState(undefined)\n  // loading can be undefined, null, true, false.\n  // undefined is default - will trigger a reconnect to web3\n  // true for when connecting to web3\n  // false for when finished connecting to web3\n  // null for when an error occurred when connecting to web3\n  const [loading, setLoading] = useState(undefined)\n  const [signedIn, setSignedIn] = useState(false)\n  const [walletAddress, setWalletAddress] = useState(null)\n  const [frensKeysInstance, setFrensKeysInstance] = useState(null)\n  const [swapperInstance, setSwapperInstance] = useState(null)\n\n  // FOR MINTING\n  const [how_many_nfts, set_how_many_nfts] = useState(1)\n\n  // INFO FROM SMART Contract\n\n  const [totalSupply, setTotalSupply] = useState(0)\n  const [totalMinted, setTotalMinted] = useState(0)\n  const [balance, setBalance] = useState(0)\n\n  useEffect(() => {\n    console.log(frensKeysInstance?.methods)\n    console.log(swapperInstance?.methods)\n  }, [frensKeysInstance, swapperInstance])\n\n  useEffect(() => {\n    async function connect() {\n      if (loading === undefined) {\n        try {\n          setLoading(true)\n          const providerOptions = {\n            /* See Provider Options Section */\n            // https://github.com/Web3Modal/web3modal\n          }\n          const web3Modal = new Web3Modal({\n            network: 'mainnet', // optional\n            cacheProvider: true, // optional\n            providerOptions, // required\n          })\n\n          const provider = await web3Modal.connect()\n\n          const web3 = new Web3(provider)\n\n          if (web3.eth) {\n            await handleConnect(web3.eth)\n\n            // Subscribe to accounts change\n            provider.on('accountsChanged', (accounts) => {\n              handleAccountsChanged(web3, accounts)\n            })\n\n            // Subscribe to chainId change\n            provider.on('chainChanged', (chainId) => {\n              window.location.reload()\n            })\n\n            // Subscribe to provider connection\n            provider.on('connect', (info) => {\n              console.log(info)\n            })\n\n            // Subscribe to provider disconnection\n            provider.on('disconnect', (error) => {\n              handleDisconnect()\n            })\n          } else {\n            // web3 was not ready, wait for it.\n            window.addEventListener('ethereum#initialized', () => handleConnect(web3.eth), {\n              once: true,\n            })\n\n            // If the event is not dispatched by the end of the timeout, the user probably doesn't have MetaMask installed.\n            setTimeout(handleConnect, 3000) // 3 seconds\n          }\n\n          console.log('setting web3', web3)\n          setWeb3(web3)\n          setLoading(false)\n        } catch (error) {\n          console.log('error', error)\n          setLoading(null)\n        }\n      }\n    }\n\n    connect()\n  }, [loading, walletAddress, swapperInstance, frensKeysInstance])\n\n  async function swap() {\n    const expectedBlockTime = 1000;\n\n    if (!frensKeysInstance || !swapperInstance || !walletAddress || loading === true) return false\n    console.log(frensKeysInstance.methods)\n    console.log(swapperInstance)\n\n    let swapOwner = swapperInstance.options.address + \"\"\n    console.log('swapOwner', swapOwner)\n    // console.log(\"Submitted transaction with hash: \", transactonHash)\n    frensKeysInstance.methods.approve(swapOwner, 4).send({ from: walletAddress }, async function(error, transactonHash) {\n      console.log(\"Submitted transaction with hash: \", transactonHash)\n      let transactionReceipt = null\n      while (transactionReceipt == null) { // Waiting expectedBlockTime until the transaction is mined\n        transactionReceipt = await web3.eth.getTransactionReceipt(transactonHash);\n        await sleep(expectedBlockTime)\n      }\n      console.log(\"Got the transaction receipt: \", transactionReceipt)\n      let final_balance = await swapperInstance.methods.swap(4).send({from:swapOwner})\n\n      console.log('Ending balance is:', final_balance);\n    });\n\n  }\n\n  async function getBalance() {\n    console.log('starting fetch balance')\n    if (!frensKeysInstance || !swapperInstance || !walletAddress || loading === true) return false\n    const balanceResp = await frensKeysInstance.methods.balanceOf(walletAddress).call()\n\n    return balanceResp\n  }\n\n  async function handleConnect(web3) {\n    const { eth: ethereum } = web3\n    if (ethereum) {\n      // Access the decentralized web!\n      let chainId = await ethereum.getChainId()\n      if (handleChainChanged(chainId))\n        ethereum\n          .getAccounts()\n          .then((acc) => handleAccountsChanged(ethereum, acc))\n          .catch(function (error) {\n            alert(error.message)\n            console.error(error)\n          })\n    } else {\n      if (loading === null) alert('No Ethereum interface injected into browser. Read-only access')\n    }\n  }\n\n  async function handleAccountsChanged(web3, accounts) {\n    if (accounts.length === 0)\n      // MetaMask is locked or the user has not connected any accounts\n      alert('No Addresses Available in MetaMask')\n\n    if (signedIn === false) setSignedIn(true)\n\n    if (accounts[0] !== walletAddress) {\n      let wallet = accounts[0]\n      setWalletAddress(wallet)\n      await callContractData(web3, wallet)\n    }\n  }\n\n  async function callContractData(web3, wallet) {\n    // Load Key Contract ABI\n    const FrenKeysContract = new web3.Contract(FrenKeysABI, '0xE4fd38670733F927018eA4bDa88459BDeF0A40Cb')\n\n    // Load Swapper Contract ABI\n    const SwapperContract = new web3.Contract(SwapperABI, '0xE4fd38670733F927018eA4bDa88459BDeF0A40Cb')\n\n    setFrensKeysInstance(FrenKeysContract)\n    setSwapperInstance(SwapperContract)\n\n    const totalSupply = await FrenKeysContract.methods.totalSupply().call()\n    setTotalSupply(totalSupply)\n\n    const totalMinted = await FrenKeysContract.methods.totalMinted().call()\n\n    setTotalMinted(totalMinted)\n\n    const balanceResp = await FrenKeysContract.methods.balanceOf(wallet).call()\n\n    setBalance(balanceResp)\n\n    const maxSupply = await FrenKeysContract.methods.maxSupply().call()\n\n    const owner = await FrenKeysContract.methods.owner().call()\n  }\n\n  const handleDisconnect = () => {\n    setLoading(false)\n    setSignedIn(false)\n    setWalletAddress(null)\n    setSwapperInstance(null)\n  }\n\n  return {\n    web3,\n    loading,\n    walletAddress,\n    how_many_nfts,\n    totalSupply,\n    totalMinted,\n    swap,\n    getBalance,\n    balance,\n    handleConnect: () => handleConnect(web3),\n    handleDisconnect,\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals(vitals => console.log(vitals));"],"sourceRoot":""}